// Sharing service definitions discovered from JavaScript analysis

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: notebooklm/v1alpha1/sharing.proto

package notebooklmv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GuidebookStatus int32

const (
	GuidebookStatus_GUIDEBOOK_STATUS_UNSPECIFIED GuidebookStatus = 0
	GuidebookStatus_GUIDEBOOK_STATUS_DRAFT       GuidebookStatus = 1
	GuidebookStatus_GUIDEBOOK_STATUS_PUBLISHED   GuidebookStatus = 2
	GuidebookStatus_GUIDEBOOK_STATUS_ARCHIVED    GuidebookStatus = 3
)

// Enum value maps for GuidebookStatus.
var (
	GuidebookStatus_name = map[int32]string{
		0: "GUIDEBOOK_STATUS_UNSPECIFIED",
		1: "GUIDEBOOK_STATUS_DRAFT",
		2: "GUIDEBOOK_STATUS_PUBLISHED",
		3: "GUIDEBOOK_STATUS_ARCHIVED",
	}
	GuidebookStatus_value = map[string]int32{
		"GUIDEBOOK_STATUS_UNSPECIFIED": 0,
		"GUIDEBOOK_STATUS_DRAFT":       1,
		"GUIDEBOOK_STATUS_PUBLISHED":   2,
		"GUIDEBOOK_STATUS_ARCHIVED":    3,
	}
)

func (x GuidebookStatus) Enum() *GuidebookStatus {
	p := new(GuidebookStatus)
	*p = x
	return p
}

func (x GuidebookStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GuidebookStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_notebooklm_v1alpha1_sharing_proto_enumTypes[0].Descriptor()
}

func (GuidebookStatus) Type() protoreflect.EnumType {
	return &file_notebooklm_v1alpha1_sharing_proto_enumTypes[0]
}

func (x GuidebookStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GuidebookStatus.Descriptor instead.
func (GuidebookStatus) EnumDescriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{0}
}

type ShareAudioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareOptions []int32 `protobuf:"varint,1,rep,packed,name=share_options,json=shareOptions,proto3" json:"share_options,omitempty"` // e.g., [0] for private, [1] for public
	ProjectId    string  `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ShareAudioRequest) Reset() {
	*x = ShareAudioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareAudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareAudioRequest) ProtoMessage() {}

func (x *ShareAudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareAudioRequest.ProtoReflect.Descriptor instead.
func (*ShareAudioRequest) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{0}
}

func (x *ShareAudioRequest) GetShareOptions() []int32 {
	if x != nil {
		return x.ShareOptions
	}
	return nil
}

func (x *ShareAudioRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ShareAudioResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareInfo []string `protobuf:"bytes,1,rep,name=share_info,json=shareInfo,proto3" json:"share_info,omitempty"` // [share_url, share_id]
}

func (x *ShareAudioResponse) Reset() {
	*x = ShareAudioResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareAudioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareAudioResponse) ProtoMessage() {}

func (x *ShareAudioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareAudioResponse.ProtoReflect.Descriptor instead.
func (*ShareAudioResponse) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{1}
}

func (x *ShareAudioResponse) GetShareInfo() []string {
	if x != nil {
		return x.ShareInfo
	}
	return nil
}

type GetProjectDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareId string `protobuf:"bytes,1,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
}

func (x *GetProjectDetailsRequest) Reset() {
	*x = GetProjectDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectDetailsRequest) ProtoMessage() {}

func (x *GetProjectDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetProjectDetailsRequest) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{2}
}

func (x *GetProjectDetailsRequest) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

type ProjectDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Title     string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Emoji     string                 `protobuf:"bytes,3,opt,name=emoji,proto3" json:"emoji,omitempty"`
	OwnerName string                 `protobuf:"bytes,4,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	IsPublic  bool                   `protobuf:"varint,5,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	SharedAt  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=shared_at,json=sharedAt,proto3" json:"shared_at,omitempty"`
	Sources   []*SourceSummary       `protobuf:"bytes,7,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *ProjectDetails) Reset() {
	*x = ProjectDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDetails) ProtoMessage() {}

func (x *ProjectDetails) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDetails.ProtoReflect.Descriptor instead.
func (*ProjectDetails) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectDetails) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectDetails) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProjectDetails) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

func (x *ProjectDetails) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *ProjectDetails) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *ProjectDetails) GetSharedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SharedAt
	}
	return nil
}

func (x *ProjectDetails) GetSources() []*SourceSummary {
	if x != nil {
		return x.Sources
	}
	return nil
}

type SourceSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId   string     `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Title      string     `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	SourceType SourceType `protobuf:"varint,3,opt,name=source_type,json=sourceType,proto3,enum=notebooklm.v1alpha1.SourceType" json:"source_type,omitempty"`
}

func (x *SourceSummary) Reset() {
	*x = SourceSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceSummary) ProtoMessage() {}

func (x *SourceSummary) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceSummary.ProtoReflect.Descriptor instead.
func (*SourceSummary) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{4}
}

func (x *SourceSummary) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *SourceSummary) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SourceSummary) GetSourceType() SourceType {
	if x != nil {
		return x.SourceType
	}
	return SourceType_SOURCE_TYPE_UNSPECIFIED
}

type ShareProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string         `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Settings  *ShareSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *ShareProjectRequest) Reset() {
	*x = ShareProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareProjectRequest) ProtoMessage() {}

func (x *ShareProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareProjectRequest.ProtoReflect.Descriptor instead.
func (*ShareProjectRequest) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{5}
}

func (x *ShareProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ShareProjectRequest) GetSettings() *ShareSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type ShareSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPublic       bool                   `protobuf:"varint,1,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	AllowedEmails  []string               `protobuf:"bytes,2,rep,name=allowed_emails,json=allowedEmails,proto3" json:"allowed_emails,omitempty"`
	AllowComments  bool                   `protobuf:"varint,3,opt,name=allow_comments,json=allowComments,proto3" json:"allow_comments,omitempty"`
	AllowDownloads bool                   `protobuf:"varint,4,opt,name=allow_downloads,json=allowDownloads,proto3" json:"allow_downloads,omitempty"`
	ExpiryTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
}

func (x *ShareSettings) Reset() {
	*x = ShareSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareSettings) ProtoMessage() {}

func (x *ShareSettings) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareSettings.ProtoReflect.Descriptor instead.
func (*ShareSettings) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{6}
}

func (x *ShareSettings) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *ShareSettings) GetAllowedEmails() []string {
	if x != nil {
		return x.AllowedEmails
	}
	return nil
}

func (x *ShareSettings) GetAllowComments() bool {
	if x != nil {
		return x.AllowComments
	}
	return false
}

func (x *ShareSettings) GetAllowDownloads() bool {
	if x != nil {
		return x.AllowDownloads
	}
	return false
}

func (x *ShareSettings) GetExpiryTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryTime
	}
	return nil
}

type ShareProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareUrl string         `protobuf:"bytes,1,opt,name=share_url,json=shareUrl,proto3" json:"share_url,omitempty"`
	ShareId  string         `protobuf:"bytes,2,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	Settings *ShareSettings `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *ShareProjectResponse) Reset() {
	*x = ShareProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareProjectResponse) ProtoMessage() {}

func (x *ShareProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareProjectResponse.ProtoReflect.Descriptor instead.
func (*ShareProjectResponse) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{7}
}

func (x *ShareProjectResponse) GetShareUrl() string {
	if x != nil {
		return x.ShareUrl
	}
	return ""
}

func (x *ShareProjectResponse) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *ShareProjectResponse) GetSettings() *ShareSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// Guidebook-related messages
type Guidebook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuidebookId string                 `protobuf:"bytes,1,opt,name=guidebook_id,json=guidebookId,proto3" json:"guidebook_id,omitempty"`
	ProjectId   string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Title       string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content     string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Status      GuidebookStatus        `protobuf:"varint,5,opt,name=status,proto3,enum=notebooklm.v1alpha1.GuidebookStatus" json:"status,omitempty"`
	PublishedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
}

func (x *Guidebook) Reset() {
	*x = Guidebook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guidebook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guidebook) ProtoMessage() {}

func (x *Guidebook) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guidebook.ProtoReflect.Descriptor instead.
func (*Guidebook) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{8}
}

func (x *Guidebook) GetGuidebookId() string {
	if x != nil {
		return x.GuidebookId
	}
	return ""
}

func (x *Guidebook) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Guidebook) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Guidebook) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Guidebook) GetStatus() GuidebookStatus {
	if x != nil {
		return x.Status
	}
	return GuidebookStatus_GUIDEBOOK_STATUS_UNSPECIFIED
}

func (x *Guidebook) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

type DeleteGuidebookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuidebookId string `protobuf:"bytes,1,opt,name=guidebook_id,json=guidebookId,proto3" json:"guidebook_id,omitempty"`
}

func (x *DeleteGuidebookRequest) Reset() {
	*x = DeleteGuidebookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGuidebookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGuidebookRequest) ProtoMessage() {}

func (x *DeleteGuidebookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGuidebookRequest.ProtoReflect.Descriptor instead.
func (*DeleteGuidebookRequest) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteGuidebookRequest) GetGuidebookId() string {
	if x != nil {
		return x.GuidebookId
	}
	return ""
}

type GetGuidebookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuidebookId string `protobuf:"bytes,1,opt,name=guidebook_id,json=guidebookId,proto3" json:"guidebook_id,omitempty"`
}

func (x *GetGuidebookRequest) Reset() {
	*x = GetGuidebookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuidebookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuidebookRequest) ProtoMessage() {}

func (x *GetGuidebookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuidebookRequest.ProtoReflect.Descriptor instead.
func (*GetGuidebookRequest) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{10}
}

func (x *GetGuidebookRequest) GetGuidebookId() string {
	if x != nil {
		return x.GuidebookId
	}
	return ""
}

type ListRecentlyViewedGuidebooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListRecentlyViewedGuidebooksRequest) Reset() {
	*x = ListRecentlyViewedGuidebooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecentlyViewedGuidebooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecentlyViewedGuidebooksRequest) ProtoMessage() {}

func (x *ListRecentlyViewedGuidebooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecentlyViewedGuidebooksRequest.ProtoReflect.Descriptor instead.
func (*ListRecentlyViewedGuidebooksRequest) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{11}
}

func (x *ListRecentlyViewedGuidebooksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRecentlyViewedGuidebooksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListRecentlyViewedGuidebooksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guidebooks    []*Guidebook `protobuf:"bytes,1,rep,name=guidebooks,proto3" json:"guidebooks,omitempty"`
	NextPageToken string       `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListRecentlyViewedGuidebooksResponse) Reset() {
	*x = ListRecentlyViewedGuidebooksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRecentlyViewedGuidebooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecentlyViewedGuidebooksResponse) ProtoMessage() {}

func (x *ListRecentlyViewedGuidebooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecentlyViewedGuidebooksResponse.ProtoReflect.Descriptor instead.
func (*ListRecentlyViewedGuidebooksResponse) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{12}
}

func (x *ListRecentlyViewedGuidebooksResponse) GetGuidebooks() []*Guidebook {
	if x != nil {
		return x.Guidebooks
	}
	return nil
}

func (x *ListRecentlyViewedGuidebooksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type PublishGuidebookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuidebookId string           `protobuf:"bytes,1,opt,name=guidebook_id,json=guidebookId,proto3" json:"guidebook_id,omitempty"`
	Settings    *PublishSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *PublishGuidebookRequest) Reset() {
	*x = PublishGuidebookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishGuidebookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishGuidebookRequest) ProtoMessage() {}

func (x *PublishGuidebookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishGuidebookRequest.ProtoReflect.Descriptor instead.
func (*PublishGuidebookRequest) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{13}
}

func (x *PublishGuidebookRequest) GetGuidebookId() string {
	if x != nil {
		return x.GuidebookId
	}
	return ""
}

func (x *PublishGuidebookRequest) GetSettings() *PublishSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type PublishSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPublic bool     `protobuf:"varint,1,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	Tags     []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *PublishSettings) Reset() {
	*x = PublishSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishSettings) ProtoMessage() {}

func (x *PublishSettings) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishSettings.ProtoReflect.Descriptor instead.
func (*PublishSettings) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{14}
}

func (x *PublishSettings) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *PublishSettings) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type PublishGuidebookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guidebook *Guidebook `protobuf:"bytes,1,opt,name=guidebook,proto3" json:"guidebook,omitempty"`
	PublicUrl string     `protobuf:"bytes,2,opt,name=public_url,json=publicUrl,proto3" json:"public_url,omitempty"`
}

func (x *PublishGuidebookResponse) Reset() {
	*x = PublishGuidebookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishGuidebookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishGuidebookResponse) ProtoMessage() {}

func (x *PublishGuidebookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishGuidebookResponse.ProtoReflect.Descriptor instead.
func (*PublishGuidebookResponse) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{15}
}

func (x *PublishGuidebookResponse) GetGuidebook() *Guidebook {
	if x != nil {
		return x.Guidebook
	}
	return nil
}

func (x *PublishGuidebookResponse) GetPublicUrl() string {
	if x != nil {
		return x.PublicUrl
	}
	return ""
}

type GetGuidebookDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuidebookId string `protobuf:"bytes,1,opt,name=guidebook_id,json=guidebookId,proto3" json:"guidebook_id,omitempty"`
}

func (x *GetGuidebookDetailsRequest) Reset() {
	*x = GetGuidebookDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuidebookDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuidebookDetailsRequest) ProtoMessage() {}

func (x *GetGuidebookDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuidebookDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetGuidebookDetailsRequest) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{16}
}

func (x *GetGuidebookDetailsRequest) GetGuidebookId() string {
	if x != nil {
		return x.GuidebookId
	}
	return ""
}

type GuidebookDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guidebook *Guidebook          `protobuf:"bytes,1,opt,name=guidebook,proto3" json:"guidebook,omitempty"`
	Sections  []*GuidebookSection `protobuf:"bytes,2,rep,name=sections,proto3" json:"sections,omitempty"`
	Analytics *GuidebookAnalytics `protobuf:"bytes,3,opt,name=analytics,proto3" json:"analytics,omitempty"`
}

func (x *GuidebookDetails) Reset() {
	*x = GuidebookDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuidebookDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuidebookDetails) ProtoMessage() {}

func (x *GuidebookDetails) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuidebookDetails.ProtoReflect.Descriptor instead.
func (*GuidebookDetails) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{17}
}

func (x *GuidebookDetails) GetGuidebook() *Guidebook {
	if x != nil {
		return x.Guidebook
	}
	return nil
}

func (x *GuidebookDetails) GetSections() []*GuidebookSection {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *GuidebookDetails) GetAnalytics() *GuidebookAnalytics {
	if x != nil {
		return x.Analytics
	}
	return nil
}

type GuidebookSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectionId string `protobuf:"bytes,1,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Order     int32  `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *GuidebookSection) Reset() {
	*x = GuidebookSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuidebookSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuidebookSection) ProtoMessage() {}

func (x *GuidebookSection) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuidebookSection.ProtoReflect.Descriptor instead.
func (*GuidebookSection) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{18}
}

func (x *GuidebookSection) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *GuidebookSection) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GuidebookSection) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GuidebookSection) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type GuidebookAnalytics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ViewCount  int32                  `protobuf:"varint,1,opt,name=view_count,json=viewCount,proto3" json:"view_count,omitempty"`
	ShareCount int32                  `protobuf:"varint,2,opt,name=share_count,json=shareCount,proto3" json:"share_count,omitempty"`
	LastViewed *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_viewed,json=lastViewed,proto3" json:"last_viewed,omitempty"`
}

func (x *GuidebookAnalytics) Reset() {
	*x = GuidebookAnalytics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuidebookAnalytics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuidebookAnalytics) ProtoMessage() {}

func (x *GuidebookAnalytics) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuidebookAnalytics.ProtoReflect.Descriptor instead.
func (*GuidebookAnalytics) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{19}
}

func (x *GuidebookAnalytics) GetViewCount() int32 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

func (x *GuidebookAnalytics) GetShareCount() int32 {
	if x != nil {
		return x.ShareCount
	}
	return 0
}

func (x *GuidebookAnalytics) GetLastViewed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastViewed
	}
	return nil
}

type ShareGuidebookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuidebookId string         `protobuf:"bytes,1,opt,name=guidebook_id,json=guidebookId,proto3" json:"guidebook_id,omitempty"`
	Settings    *ShareSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *ShareGuidebookRequest) Reset() {
	*x = ShareGuidebookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareGuidebookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareGuidebookRequest) ProtoMessage() {}

func (x *ShareGuidebookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareGuidebookRequest.ProtoReflect.Descriptor instead.
func (*ShareGuidebookRequest) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{20}
}

func (x *ShareGuidebookRequest) GetGuidebookId() string {
	if x != nil {
		return x.GuidebookId
	}
	return ""
}

func (x *ShareGuidebookRequest) GetSettings() *ShareSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type ShareGuidebookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareUrl string `protobuf:"bytes,1,opt,name=share_url,json=shareUrl,proto3" json:"share_url,omitempty"`
	ShareId  string `protobuf:"bytes,2,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
}

func (x *ShareGuidebookResponse) Reset() {
	*x = ShareGuidebookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareGuidebookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareGuidebookResponse) ProtoMessage() {}

func (x *ShareGuidebookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareGuidebookResponse.ProtoReflect.Descriptor instead.
func (*ShareGuidebookResponse) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{21}
}

func (x *ShareGuidebookResponse) GetShareUrl() string {
	if x != nil {
		return x.ShareUrl
	}
	return ""
}

func (x *ShareGuidebookResponse) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

type GuidebookGenerateAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuidebookId string                  `protobuf:"bytes,1,opt,name=guidebook_id,json=guidebookId,proto3" json:"guidebook_id,omitempty"`
	Question    string                  `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Settings    *GenerateAnswerSettings `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *GuidebookGenerateAnswerRequest) Reset() {
	*x = GuidebookGenerateAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuidebookGenerateAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuidebookGenerateAnswerRequest) ProtoMessage() {}

func (x *GuidebookGenerateAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuidebookGenerateAnswerRequest.ProtoReflect.Descriptor instead.
func (*GuidebookGenerateAnswerRequest) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{22}
}

func (x *GuidebookGenerateAnswerRequest) GetGuidebookId() string {
	if x != nil {
		return x.GuidebookId
	}
	return ""
}

func (x *GuidebookGenerateAnswerRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *GuidebookGenerateAnswerRequest) GetSettings() *GenerateAnswerSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type GenerateAnswerSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxLength      int32   `protobuf:"varint,1,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	Temperature    float32 `protobuf:"fixed32,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	IncludeSources bool    `protobuf:"varint,3,opt,name=include_sources,json=includeSources,proto3" json:"include_sources,omitempty"`
}

func (x *GenerateAnswerSettings) Reset() {
	*x = GenerateAnswerSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAnswerSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAnswerSettings) ProtoMessage() {}

func (x *GenerateAnswerSettings) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAnswerSettings.ProtoReflect.Descriptor instead.
func (*GenerateAnswerSettings) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{23}
}

func (x *GenerateAnswerSettings) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *GenerateAnswerSettings) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *GenerateAnswerSettings) GetIncludeSources() bool {
	if x != nil {
		return x.IncludeSources
	}
	return false
}

type GuidebookGenerateAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer          string             `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	Sources         []*SourceReference `protobuf:"bytes,2,rep,name=sources,proto3" json:"sources,omitempty"`
	ConfidenceScore float32            `protobuf:"fixed32,3,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`
}

func (x *GuidebookGenerateAnswerResponse) Reset() {
	*x = GuidebookGenerateAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuidebookGenerateAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuidebookGenerateAnswerResponse) ProtoMessage() {}

func (x *GuidebookGenerateAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuidebookGenerateAnswerResponse.ProtoReflect.Descriptor instead.
func (*GuidebookGenerateAnswerResponse) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{24}
}

func (x *GuidebookGenerateAnswerResponse) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *GuidebookGenerateAnswerResponse) GetSources() []*SourceReference {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *GuidebookGenerateAnswerResponse) GetConfidenceScore() float32 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

type SourceReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId string `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Excerpt  string `protobuf:"bytes,3,opt,name=excerpt,proto3" json:"excerpt,omitempty"`
}

func (x *SourceReference) Reset() {
	*x = SourceReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceReference) ProtoMessage() {}

func (x *SourceReference) ProtoReflect() protoreflect.Message {
	mi := &file_notebooklm_v1alpha1_sharing_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceReference.ProtoReflect.Descriptor instead.
func (*SourceReference) Descriptor() ([]byte, []int) {
	return file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP(), []int{25}
}

func (x *SourceReference) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *SourceReference) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SourceReference) GetExcerpt() string {
	if x != nil {
		return x.Excerpt
	}
	return ""
}

var File_notebooklm_v1alpha1_sharing_proto protoreflect.FileDescriptor

var file_notebooklm_v1alpha1_sharing_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x6c, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x6e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x11, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x33, 0x0a, 0x12, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x35, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x22, 0x8e, 0x02, 0x0a, 0x0e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c,
	0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a,
	0x0d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x40, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x74, 0x0a, 0x13, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x0d, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12,
	0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8e, 0x01, 0x0a,
	0x14, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xfa, 0x01,
	0x0a, 0x09, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x67,
	0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3b, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x75, 0x69, 0x64,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x75,
	0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49,
	0x64, 0x22, 0x61, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c,
	0x79, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x6c, 0x79, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0a, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x52, 0x0a, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7e, 0x0a, 0x17, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x42, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x77, 0x0a, 0x18, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x09, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55,
	0x72, 0x6c, 0x22, 0x3f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x49, 0x64, 0x22, 0xda, 0x01, 0x0a, 0x10, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x64,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x09, 0x67, 0x75, 0x69,
	0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x09, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e,
	0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x52, 0x09, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x22, 0x77, 0x0a, 0x10, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x12, 0x47, 0x75,
	0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x22, 0x7a, 0x0a,
	0x15, 0x53, 0x68, 0x61, 0x72, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x75,
	0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x50, 0x0a, 0x16, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x1e,
	0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x1f,
	0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x07,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x5e, 0x0a, 0x0f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x63, 0x65,
	0x72, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x63, 0x65, 0x72,
	0x70, 0x74, 0x2a, 0x8e, 0x01, 0x0a, 0x0f, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x1c, 0x47, 0x55, 0x49, 0x44, 0x45, 0x42,
	0x4f, 0x4f, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x55, 0x49, 0x44,
	0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x52, 0x41,
	0x46, 0x54, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x47, 0x55, 0x49, 0x44, 0x45, 0x42, 0x4f, 0x4f,
	0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x47, 0x55, 0x49, 0x44, 0x45, 0x42, 0x4f, 0x4f,
	0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45,
	0x44, 0x10, 0x03, 0x32, 0xc1, 0x03, 0x0a, 0x1a, 0x4c, 0x61, 0x62, 0x73, 0x54, 0x61, 0x69, 0x6c,
	0x77, 0x69, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x12, 0x26, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6e, 0x6f, 0x74, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2d, 0xc2, 0xf3, 0x18, 0x06, 0x52, 0x47, 0x50, 0x39, 0x37, 0x62, 0xca, 0xf3,
	0x18, 0x1f, 0x5b, 0x25, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x25, 0x2c, 0x20, 0x25, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x25,
	0x5d, 0x12, 0x83, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2d, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x1a, 0xc2, 0xf3, 0x18,
	0x06, 0x4a, 0x46, 0x4d, 0x44, 0x47, 0x64, 0xca, 0xf3, 0x18, 0x0c, 0x5b, 0x25, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x25, 0x5d, 0x12, 0x8d, 0x01, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0xc2,
	0xf3, 0x18, 0x06, 0x51, 0x44, 0x79, 0x75, 0x72, 0x65, 0xca, 0xf3, 0x18, 0x1a, 0x5b, 0x25, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x25, 0x2c, 0x20, 0x25, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x25, 0x5d, 0x32, 0xd5, 0x08, 0x0a, 0x1d, 0x4c, 0x61, 0x62, 0x73,
	0x54, 0x61, 0x69, 0x6c, 0x77, 0x69, 0x6e, 0x64, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x2b, 0x2e, 0x6e,
	0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x1e, 0xc2, 0xf3, 0x18, 0x06, 0x41, 0x52, 0x47, 0x6b, 0x56, 0x63, 0xca, 0xf3, 0x18,
	0x10, 0x5b, 0x25, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x25,
	0x5d, 0x12, 0x77, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x12, 0x28, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x1d, 0xc2, 0xf3, 0x18,
	0x05, 0x45, 0x59, 0x71, 0x74, 0x55, 0xca, 0xf3, 0x18, 0x10, 0x5b, 0x25, 0x67, 0x75, 0x69, 0x64,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x25, 0x5d, 0x12, 0xbe, 0x01, 0x0a, 0x1c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x56, 0x69, 0x65, 0x77, 0x65,
	0x64, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x38, 0x2e, 0x6e, 0x6f,
	0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x64, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x47, 0x75,
	0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x29, 0xc2, 0xf3, 0x18, 0x06, 0x59, 0x4a, 0x42, 0x70, 0x48, 0x63, 0xca, 0xf3, 0x18, 0x1b,
	0x5b, 0x25, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x25, 0x2c, 0x20, 0x25, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x25, 0x5d, 0x12, 0x9b, 0x01, 0x0a, 0x10,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x12, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x47, 0x75,
	0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x47, 0x75, 0x69, 0x64,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0xc2,
	0xf3, 0x18, 0x06, 0x52, 0x36, 0x73, 0x6d, 0x61, 0x65, 0xca, 0xf3, 0x18, 0x1c, 0x5b, 0x25, 0x67,
	0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x25, 0x2c, 0x20, 0x25, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x25, 0x5d, 0x12, 0x8d, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x2f, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x1e, 0xc2, 0xf3, 0x18, 0x06, 0x4c,
	0x4a, 0x79, 0x7a, 0x65, 0x62, 0xca, 0xf3, 0x18, 0x10, 0x5b, 0x25, 0x67, 0x75, 0x69, 0x64, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x25, 0x5d, 0x12, 0x94, 0x01, 0x0a, 0x0e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x2a, 0x2e, 0x6e,
	0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0xc2, 0xf3, 0x18, 0x05, 0x4f, 0x54, 0x6c, 0x30, 0x4b,
	0xca, 0xf3, 0x18, 0x1c, 0x5b, 0x25, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x69, 0x64, 0x25, 0x2c, 0x20, 0x25, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x25, 0x5d,
	0x12, 0xbc, 0x01, 0x0a, 0x17, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x6e,
	0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0xc2, 0xf3, 0x18, 0x06, 0x69, 0x74, 0x41,
	0x30, 0x70, 0x63, 0xca, 0xf3, 0x18, 0x28, 0x5b, 0x25, 0x67, 0x75, 0x69, 0x64, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x25, 0x2c, 0x20, 0x25, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x25, 0x2c, 0x20, 0x25, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x25, 0x5d, 0x42,
	0xd3, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x6c, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0c, 0x53, 0x68, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6d, 0x63, 0x2f, 0x6e, 0x6c, 0x6d, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x6c, 0x6d, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x4e, 0x58, 0x58,
	0xaa, 0x02, 0x13, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x2e, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x13, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x6c, 0x6d, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x1f, 0x4e,
	0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x14, 0x4e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x6c, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notebooklm_v1alpha1_sharing_proto_rawDescOnce sync.Once
	file_notebooklm_v1alpha1_sharing_proto_rawDescData = file_notebooklm_v1alpha1_sharing_proto_rawDesc
)

func file_notebooklm_v1alpha1_sharing_proto_rawDescGZIP() []byte {
	file_notebooklm_v1alpha1_sharing_proto_rawDescOnce.Do(func() {
		file_notebooklm_v1alpha1_sharing_proto_rawDescData = protoimpl.X.CompressGZIP(file_notebooklm_v1alpha1_sharing_proto_rawDescData)
	})
	return file_notebooklm_v1alpha1_sharing_proto_rawDescData
}

var file_notebooklm_v1alpha1_sharing_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_notebooklm_v1alpha1_sharing_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_notebooklm_v1alpha1_sharing_proto_goTypes = []interface{}{
	(GuidebookStatus)(0),                         // 0: notebooklm.v1alpha1.GuidebookStatus
	(*ShareAudioRequest)(nil),                    // 1: notebooklm.v1alpha1.ShareAudioRequest
	(*ShareAudioResponse)(nil),                   // 2: notebooklm.v1alpha1.ShareAudioResponse
	(*GetProjectDetailsRequest)(nil),             // 3: notebooklm.v1alpha1.GetProjectDetailsRequest
	(*ProjectDetails)(nil),                       // 4: notebooklm.v1alpha1.ProjectDetails
	(*SourceSummary)(nil),                        // 5: notebooklm.v1alpha1.SourceSummary
	(*ShareProjectRequest)(nil),                  // 6: notebooklm.v1alpha1.ShareProjectRequest
	(*ShareSettings)(nil),                        // 7: notebooklm.v1alpha1.ShareSettings
	(*ShareProjectResponse)(nil),                 // 8: notebooklm.v1alpha1.ShareProjectResponse
	(*Guidebook)(nil),                            // 9: notebooklm.v1alpha1.Guidebook
	(*DeleteGuidebookRequest)(nil),               // 10: notebooklm.v1alpha1.DeleteGuidebookRequest
	(*GetGuidebookRequest)(nil),                  // 11: notebooklm.v1alpha1.GetGuidebookRequest
	(*ListRecentlyViewedGuidebooksRequest)(nil),  // 12: notebooklm.v1alpha1.ListRecentlyViewedGuidebooksRequest
	(*ListRecentlyViewedGuidebooksResponse)(nil), // 13: notebooklm.v1alpha1.ListRecentlyViewedGuidebooksResponse
	(*PublishGuidebookRequest)(nil),              // 14: notebooklm.v1alpha1.PublishGuidebookRequest
	(*PublishSettings)(nil),                      // 15: notebooklm.v1alpha1.PublishSettings
	(*PublishGuidebookResponse)(nil),             // 16: notebooklm.v1alpha1.PublishGuidebookResponse
	(*GetGuidebookDetailsRequest)(nil),           // 17: notebooklm.v1alpha1.GetGuidebookDetailsRequest
	(*GuidebookDetails)(nil),                     // 18: notebooklm.v1alpha1.GuidebookDetails
	(*GuidebookSection)(nil),                     // 19: notebooklm.v1alpha1.GuidebookSection
	(*GuidebookAnalytics)(nil),                   // 20: notebooklm.v1alpha1.GuidebookAnalytics
	(*ShareGuidebookRequest)(nil),                // 21: notebooklm.v1alpha1.ShareGuidebookRequest
	(*ShareGuidebookResponse)(nil),               // 22: notebooklm.v1alpha1.ShareGuidebookResponse
	(*GuidebookGenerateAnswerRequest)(nil),       // 23: notebooklm.v1alpha1.GuidebookGenerateAnswerRequest
	(*GenerateAnswerSettings)(nil),               // 24: notebooklm.v1alpha1.GenerateAnswerSettings
	(*GuidebookGenerateAnswerResponse)(nil),      // 25: notebooklm.v1alpha1.GuidebookGenerateAnswerResponse
	(*SourceReference)(nil),                      // 26: notebooklm.v1alpha1.SourceReference
	(*timestamppb.Timestamp)(nil),                // 27: google.protobuf.Timestamp
	(SourceType)(0),                              // 28: notebooklm.v1alpha1.SourceType
	(*emptypb.Empty)(nil),                        // 29: google.protobuf.Empty
}
var file_notebooklm_v1alpha1_sharing_proto_depIdxs = []int32{
	27, // 0: notebooklm.v1alpha1.ProjectDetails.shared_at:type_name -> google.protobuf.Timestamp
	5,  // 1: notebooklm.v1alpha1.ProjectDetails.sources:type_name -> notebooklm.v1alpha1.SourceSummary
	28, // 2: notebooklm.v1alpha1.SourceSummary.source_type:type_name -> notebooklm.v1alpha1.SourceType
	7,  // 3: notebooklm.v1alpha1.ShareProjectRequest.settings:type_name -> notebooklm.v1alpha1.ShareSettings
	27, // 4: notebooklm.v1alpha1.ShareSettings.expiry_time:type_name -> google.protobuf.Timestamp
	7,  // 5: notebooklm.v1alpha1.ShareProjectResponse.settings:type_name -> notebooklm.v1alpha1.ShareSettings
	0,  // 6: notebooklm.v1alpha1.Guidebook.status:type_name -> notebooklm.v1alpha1.GuidebookStatus
	27, // 7: notebooklm.v1alpha1.Guidebook.published_at:type_name -> google.protobuf.Timestamp
	9,  // 8: notebooklm.v1alpha1.ListRecentlyViewedGuidebooksResponse.guidebooks:type_name -> notebooklm.v1alpha1.Guidebook
	15, // 9: notebooklm.v1alpha1.PublishGuidebookRequest.settings:type_name -> notebooklm.v1alpha1.PublishSettings
	9,  // 10: notebooklm.v1alpha1.PublishGuidebookResponse.guidebook:type_name -> notebooklm.v1alpha1.Guidebook
	9,  // 11: notebooklm.v1alpha1.GuidebookDetails.guidebook:type_name -> notebooklm.v1alpha1.Guidebook
	19, // 12: notebooklm.v1alpha1.GuidebookDetails.sections:type_name -> notebooklm.v1alpha1.GuidebookSection
	20, // 13: notebooklm.v1alpha1.GuidebookDetails.analytics:type_name -> notebooklm.v1alpha1.GuidebookAnalytics
	27, // 14: notebooklm.v1alpha1.GuidebookAnalytics.last_viewed:type_name -> google.protobuf.Timestamp
	7,  // 15: notebooklm.v1alpha1.ShareGuidebookRequest.settings:type_name -> notebooklm.v1alpha1.ShareSettings
	24, // 16: notebooklm.v1alpha1.GuidebookGenerateAnswerRequest.settings:type_name -> notebooklm.v1alpha1.GenerateAnswerSettings
	26, // 17: notebooklm.v1alpha1.GuidebookGenerateAnswerResponse.sources:type_name -> notebooklm.v1alpha1.SourceReference
	1,  // 18: notebooklm.v1alpha1.LabsTailwindSharingService.ShareAudio:input_type -> notebooklm.v1alpha1.ShareAudioRequest
	3,  // 19: notebooklm.v1alpha1.LabsTailwindSharingService.GetProjectDetails:input_type -> notebooklm.v1alpha1.GetProjectDetailsRequest
	6,  // 20: notebooklm.v1alpha1.LabsTailwindSharingService.ShareProject:input_type -> notebooklm.v1alpha1.ShareProjectRequest
	10, // 21: notebooklm.v1alpha1.LabsTailwindGuidebooksService.DeleteGuidebook:input_type -> notebooklm.v1alpha1.DeleteGuidebookRequest
	11, // 22: notebooklm.v1alpha1.LabsTailwindGuidebooksService.GetGuidebook:input_type -> notebooklm.v1alpha1.GetGuidebookRequest
	12, // 23: notebooklm.v1alpha1.LabsTailwindGuidebooksService.ListRecentlyViewedGuidebooks:input_type -> notebooklm.v1alpha1.ListRecentlyViewedGuidebooksRequest
	14, // 24: notebooklm.v1alpha1.LabsTailwindGuidebooksService.PublishGuidebook:input_type -> notebooklm.v1alpha1.PublishGuidebookRequest
	17, // 25: notebooklm.v1alpha1.LabsTailwindGuidebooksService.GetGuidebookDetails:input_type -> notebooklm.v1alpha1.GetGuidebookDetailsRequest
	21, // 26: notebooklm.v1alpha1.LabsTailwindGuidebooksService.ShareGuidebook:input_type -> notebooklm.v1alpha1.ShareGuidebookRequest
	23, // 27: notebooklm.v1alpha1.LabsTailwindGuidebooksService.GuidebookGenerateAnswer:input_type -> notebooklm.v1alpha1.GuidebookGenerateAnswerRequest
	2,  // 28: notebooklm.v1alpha1.LabsTailwindSharingService.ShareAudio:output_type -> notebooklm.v1alpha1.ShareAudioResponse
	4,  // 29: notebooklm.v1alpha1.LabsTailwindSharingService.GetProjectDetails:output_type -> notebooklm.v1alpha1.ProjectDetails
	8,  // 30: notebooklm.v1alpha1.LabsTailwindSharingService.ShareProject:output_type -> notebooklm.v1alpha1.ShareProjectResponse
	29, // 31: notebooklm.v1alpha1.LabsTailwindGuidebooksService.DeleteGuidebook:output_type -> google.protobuf.Empty
	9,  // 32: notebooklm.v1alpha1.LabsTailwindGuidebooksService.GetGuidebook:output_type -> notebooklm.v1alpha1.Guidebook
	13, // 33: notebooklm.v1alpha1.LabsTailwindGuidebooksService.ListRecentlyViewedGuidebooks:output_type -> notebooklm.v1alpha1.ListRecentlyViewedGuidebooksResponse
	16, // 34: notebooklm.v1alpha1.LabsTailwindGuidebooksService.PublishGuidebook:output_type -> notebooklm.v1alpha1.PublishGuidebookResponse
	18, // 35: notebooklm.v1alpha1.LabsTailwindGuidebooksService.GetGuidebookDetails:output_type -> notebooklm.v1alpha1.GuidebookDetails
	22, // 36: notebooklm.v1alpha1.LabsTailwindGuidebooksService.ShareGuidebook:output_type -> notebooklm.v1alpha1.ShareGuidebookResponse
	25, // 37: notebooklm.v1alpha1.LabsTailwindGuidebooksService.GuidebookGenerateAnswer:output_type -> notebooklm.v1alpha1.GuidebookGenerateAnswerResponse
	28, // [28:38] is the sub-list for method output_type
	18, // [18:28] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_notebooklm_v1alpha1_sharing_proto_init() }
func file_notebooklm_v1alpha1_sharing_proto_init() {
	if File_notebooklm_v1alpha1_sharing_proto != nil {
		return
	}
	file_notebooklm_v1alpha1_notebooklm_proto_init()
	file_notebooklm_v1alpha1_rpc_extensions_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareAudioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareAudioResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guidebook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGuidebookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuidebookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecentlyViewedGuidebooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRecentlyViewedGuidebooksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishGuidebookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishGuidebookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuidebookDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuidebookDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuidebookSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuidebookAnalytics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareGuidebookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareGuidebookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuidebookGenerateAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateAnswerSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuidebookGenerateAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notebooklm_v1alpha1_sharing_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notebooklm_v1alpha1_sharing_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_notebooklm_v1alpha1_sharing_proto_goTypes,
		DependencyIndexes: file_notebooklm_v1alpha1_sharing_proto_depIdxs,
		EnumInfos:         file_notebooklm_v1alpha1_sharing_proto_enumTypes,
		MessageInfos:      file_notebooklm_v1alpha1_sharing_proto_msgTypes,
	}.Build()
	File_notebooklm_v1alpha1_sharing_proto = out.File
	file_notebooklm_v1alpha1_sharing_proto_rawDesc = nil
	file_notebooklm_v1alpha1_sharing_proto_goTypes = nil
	file_notebooklm_v1alpha1_sharing_proto_depIdxs = nil
}
