# Comprehensive authentication and edge case tests

# Test 1: No credentials - should fail gracefully
> env HOME=$WORK/test-home
> env -u NLM_AUTH_TOKEN
> env -u NLM_COOKIES
> mkdir -p $WORK/test-home
> ! exec ./nlm_test ls
> stderr 'Authentication required'

# Test 2: Auth command without browser
> env HOME=$WORK/test-home
> ! exec ./nlm_test auth
> stderr 'browser|Chrome|authentication'

# Test 3: Auth with specific profile
> env HOME=$WORK/test-home
> ! exec ./nlm_test auth "Profile 1"
> stderr 'profile|authentication'

# Test 4: Refresh authentication
> env HOME=$WORK/test-home
> env NLM_AUTH_TOKEN=old-token
> env NLM_COOKIES=old-cookies
> ! exec ./nlm_test refresh
> stderr 'refresh|authentication'

# Test 5: Check authentication status
> env HOME=$WORK/test-home
> env NLM_AUTH_TOKEN=mock-token
> env NLM_COOKIES=mock-cookies
> exec ./nlm_test auth-status
> stdout 'Authenticated'
> stdout 'Token: \*\*\*'

# Test 6: Logout functionality
> env HOME=$WORK/test-home
> env NLM_AUTH_TOKEN=mock-token
> env NLM_COOKIES=mock-cookies
> mkdir -p $WORK/test-home/.nlm
> echo 'NLM_AUTH_TOKEN="mock-token"' > $WORK/test-home/.nlm/env
> exec ./nlm_test logout
> stdout 'Logged out'
> ! exec test -f $WORK/test-home/.nlm/env

# Test 7: Command without required arguments
> env HOME=$WORK/test-home
> env NLM_AUTH_TOKEN=mock-token
> env NLM_COOKIES=mock-cookies
> ! exec ./nlm_test notes
> stderr 'usage: nlm notes <notebook-id>'

# Test 8: Invalid command
> env HOME=$WORK/test-home
> ! exec ./nlm_test nonexistent-command
> stderr 'Unknown command'

# Test 9: Version information
> exec ./nlm_test version
> stdout 'nlm version'
> stdout 'Build:'

# Test 10: Debug mode output
> env HOME=$WORK/test-home
> env NLM_AUTH_TOKEN=mock-token
> env NLM_COOKIES=mock-cookies
> env NLM_DEBUG=true
> exec ./nlm_test ls
> stderr 'DEBUG:'

# Test 11: Verbose mode
> env HOME=$WORK/test-home
> env NLM_AUTH_TOKEN=mock-token
> env NLM_COOKIES=mock-cookies
> exec ./nlm_test -v ls
> stderr 'Verbose:'

# Test 12: JSON output format
> env HOME=$WORK/test-home
> env NLM_AUTH_TOKEN=mock-token
> env NLM_COOKIES=mock-cookies
> exec ./nlm_test ls --json
> stdout '^\['
> stdout '"project_id":'
> stdout '"title":'
> stdout '^\]'

# Test 13: Concurrent operations protection
> env HOME=$WORK/test-home
> env NLM_AUTH_TOKEN=mock-token
> env NLM_COOKIES=mock-cookies
> exec ./nlm_test ls &
> exec ./nlm_test ls
> stdout 'ID\s+TITLE'

# Test 14: Interrupt handling (simulate Ctrl+C)
> env HOME=$WORK/test-home
> env NLM_AUTH_TOKEN=mock-token
> env NLM_COOKIES=mock-cookies
> # This would need a special test binary that can be interrupted
> # exec timeout 1 ./nlm_test generate-guide mock-project-001
> # stdout 'Interrupted'

# Test 15: Environment variable precedence
> env HOME=$WORK/test-home
> env NLM_AUTH_TOKEN=env-token
> mkdir -p $WORK/test-home/.nlm
> echo 'NLM_AUTH_TOKEN="file-token"' > $WORK/test-home/.nlm/env
> echo 'NLM_COOKIES="file-cookies"' >> $WORK/test-home/.nlm/env
> exec ./nlm_test auth-status
> stdout 'env-token'