# Comprehensive notes management tests

# Setup - ensure clean state with mock credentials
> env HOME=$WORK/test-home
> env NLM_AUTH_TOKEN=mock-token
> env NLM_COOKIES=mock-cookies
> mkdir -p $WORK/test-home/.nlm
> echo 'NLM_AUTH_TOKEN="mock-token"' > $WORK/test-home/.nlm/env
> echo 'NLM_COOKIES="mock-cookies"' >> $WORK/test-home/.nlm/env

# Test 1: List notes in a notebook
> exec ./nlm_test notes mock-project-001
> stdout 'NOTE ID\s+TITLE\s+LAST UPDATED'

# Test 2: Create new note
> exec ./nlm_test new-note mock-project-001 "Research Summary"
> stdout 'Created note'
> stdout 'Research Summary'

# Test 3: Update note content
> echo 'Updated note content here' > $WORK/note_update.txt
> exec ./nlm_test update-note mock-project-001 mock-note-001 $WORK/note_update.txt
> stdout 'Updated note'

# Test 4: Delete note
> exec ./nlm_test rm-note mock-project-001 mock-note-001 -y
> stdout 'Deleted note'

# Test 5: Create note with initial content
> echo 'Initial note content' | exec ./nlm_test new-note mock-project-001 "Note with Content" -
> stdout 'Created note'
> stdout 'Note with Content'

# Test 6: Export note
> exec ./nlm_test export-note mock-project-001 mock-note-002 > $WORK/exported_note.txt
> stdout 'Title:'
> stdout 'Content:'

# Test 7: Bulk note operations - create multiple
> exec ./nlm_test new-note mock-project-001 "Note 1" "Note 2" "Note 3"
> stdout 'Created 3 notes'

# Test 8: Error handling - invalid notebook
> ! exec ./nlm_test notes invalid-notebook-id
> stderr 'not found|invalid'

# Test 9: Error handling - invalid note ID
> ! exec ./nlm_test rm-note mock-project-001 invalid-note-id -y
> stderr 'not found|invalid'

# Test 10: Note search functionality
> exec ./nlm_test search-notes mock-project-001 "keyword"
> stdout 'NOTE ID\s+TITLE\s+MATCH'